{"version":3,"sources":["serviceWorker.js","components/Firebase/context.js","components/Firebase/firebase.js","components/Firebase/index.js","components/SignOut/link.js","constants/routes.js","components/Session/context.js","components/Session/withAuthentication.js","components/Session/withAuthorization.js","components/Navigation/index.js","components/Landing/index.js","components/SignUp/index.js","components/SignIn/index.js","components/PasswordForget/index.js","components/Home/index.js","components/PasswordChange/index.js","components/Account/index.js","components/Admin/index.js","components/App/index.js","index.js"],"names":["Boolean","window","location","hostname","match","FirebaseContext","React","createContext","withFirebase","Component","props","Consumer","firebase","config","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","Firebase","doCreateUserWithEmailAndPassword","email","password","auth","createUserWithEmailAndPassword","doSignInWithEmailAndPassword","signInWithEmailAndPassword","doSignOut","signOut","doPasswordReset","sendPasswordResetEmail","doPasswordUpdate","currentUser","updatePassword","user","uid","db","ref","users","app","initializeApp","this","database","Link","onClick","href","LANDING","SIGN_UP","SIGN_IN","HOME","ACCOUNT","ADMIN","AuthUserContext","withAuthentication","WithAuthentication","state","authUser","listener","onAuthStateChanged","setState","Provider","value","withAuthorization","condition","WithAuthorization","history","push","ROUTES","compose","withRouter","NavigationAuth","className","NavigationNonAuth","Navigation","Landing","INITIAL_STATE","username","passwordOne","passwordTwo","error","SignUpFormBase","onSubmit","event","then","set","catch","preventDefault","onChange","target","name","isInvalid","TextField","required","id","label","variant","type","Button","color","disabled","message","SignUpLink","Typography","SignUpForm","SignUpPage","SignInFormBase","Container","maxWidth","autoComplete","SignInForm","SignInPage","PasswordForgetFormBase","placeholder","PasswordForgetPage","PasswordForgetForm","PasswordChangeForm","PasswordChange","AdminPage","loading","on","snapshot","usersObject","val","usersList","Object","keys","map","key","off","UserList","theme","useMemo","createMuiTheme","palette","ThemeProvider","component","style","CssBaseline","exact","path","LandingPage","HomePage","AccountPage","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"iQAYoBA,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,6BChBAC,EAAkBC,IAAMC,cAAc,MAE/BC,EAAe,SAAAC,GAAS,OAAI,SAAAC,GAAK,OAC1C,kBAACL,EAAgBM,SAAjB,MACK,SAAAC,GAAQ,OAAI,kBAACH,EAAD,iBAAeC,EAAf,CAAsBE,SAAUA,UAItCP,I,yBCJTQ,G,YAAS,CACXC,OAAQC,0CACRC,WAAYD,sCACZE,YAAaF,6CACbG,UAAWH,sBACXI,cAAeJ,kCACfK,kBAAmBL,eACnBM,MAAON,4CACPO,cAAeP,iBCXJQ,EDeX,aAAe,IAAD,gCASdC,iCAAmC,SAACC,EAAOC,GAAR,OAC/B,EAAKC,KAAKC,+BAA+BH,EAAOC,IAVtC,KAYdG,6BAA+B,SAACJ,EAAOC,GAAR,OAC3B,EAAKC,KAAKG,2BAA2BL,EAAOC,IAblC,KAedK,UAAY,kBAAM,EAAKJ,KAAKK,WAfd,KAiBdC,gBAAkB,SAAAR,GAAK,OAAI,EAAKE,KAAKO,uBAAuBT,IAjB9C,KAmBdU,iBAAmB,SAAAT,GAAQ,OACvB,EAAKC,KAAKS,YAAYC,eAAeX,IApB3B,KAuBdY,KAAO,SAAAC,GAAG,OAAI,EAAKC,GAAGC,IAAR,gBAAqBF,KAvBrB,KAwBdG,MAAQ,kBAAM,EAAKF,GAAGC,IAAI,UAvBtBE,IAAIC,cAAc/B,GAElBgC,KAAKlB,KAAOgB,IAAIhB,OAChBkB,KAAKL,GAAKG,IAAIG,YEfPtC,KAJK,SAAC,GAAD,IAAGI,EAAH,EAAGA,SAAH,OAElB,kBAACmC,EAAA,EAAD,CAAMC,QAASpC,EAASmB,UAAWkB,KAAK,KAAxC,cCLWC,EAAU,wBACVC,EAAU,8BACVC,EAAU,8BACVC,EAAO,4BACPC,EAAU,+BACVC,EAAQ,6BCDNC,EAFSlD,IAAMC,cAAc,M,gCCuC7BkD,EApCY,SAAAhD,GAAc,IAC/BiD,EAD8B,YAEhC,WAAYhD,GAAQ,IAAD,8BACf,4CAAMA,KAEDiD,MAAQ,CACTC,SAAU,MAJC,EAFa,iFAUX,IAAD,OAChBf,KAAKgB,SAAWhB,KAAKnC,MAAME,SAASe,KAAKmC,oBACrC,SAAAF,GACIA,EACM,EAAKG,SAAS,CAAEH,aAChB,EAAKG,SAAS,CAAEH,SAAU,YAfZ,6CAqB5Bf,KAAKgB,aArBuB,+BAyB5B,OACI,kBAAC,EAAgBG,SAAjB,CAA0BC,MAAOpB,KAAKc,MAAMC,UACxC,kBAACnD,EAAcoC,KAAKnC,YA3BA,GACHJ,IAAMG,WAgCvC,OAAOD,EAAakD,I,QCHTQ,EA7BW,SAAAC,GAAS,OAAI,SAAA1D,GAAc,IAC3C2D,EAD0C,4LAEvB,IAAD,OAChBvB,KAAKgB,SAAWhB,KAAKnC,MAAME,SAASe,KAAKmC,oBACrC,SAAAF,GACSO,EAAUP,IACX,EAAKlD,MAAM2D,QAAQC,KAAKC,QANI,6CAYxC1B,KAAKgB,aAZmC,+BAclC,IAAD,OACL,OACI,kBAAC,EAAgBlD,SAAjB,MACK,SAAAiD,GAAQ,OACLO,EAAUP,GAAY,kBAACnD,EAAc,EAAKC,OAAY,YAlB1B,GAChBJ,IAAMG,WAuBtC,OAAO+D,YACHC,IACAjE,EAFGgE,CAGLJ,KCdAM,EAAiB,kBACrB,wBAAIC,UAAU,cACZ,4BACE,kBAAC5B,EAAA,EAAD,CAAME,KAAMsB,GAAZ,YAEF,4BACE,kBAACxB,EAAA,EAAD,CAAME,KAAMsB,GAAZ,SAEF,4BACE,kBAACxB,EAAA,EAAD,CAAME,KAAMsB,GAAZ,YAEF,4BACE,kBAACxB,EAAA,EAAD,CAAME,KAAMsB,GAAZ,UAEF,4BACE,kBAAC,EAAD,SAMAK,EAAoB,kBACxB,wBAAID,UAAU,cACZ,4BACE,kBAAC5B,EAAA,EAAD,CAAME,KAAMsB,GAAZ,YAEF,4BACE,kBAACxB,EAAA,EAAD,CAAME,KAAMsB,GAAZ,cAKSM,EA1CI,kBACjB,6BACE,kBAAC,EAAgBlE,SAAjB,MACG,SAAAiD,GAAQ,OACPA,EAAW,kBAAC,EAAD,MAAqB,kBAAC,EAAD,WCHzBkB,EARC,kBACd,6BACE,qD,yCCaEC,EAAgB,CACpBC,SAAU,GACVvD,MAAO,GACPwD,YAAa,GACbC,YAAa,GACbC,MAAO,MAGHC,E,YACJ,WAAY1E,GAAQ,IAAD,8BACjB,4CAAMA,KAKR2E,SAAW,SAAAC,GAAU,IAAD,EACuB,EAAK3B,MAAtCqB,EADU,EACVA,SAAUvD,EADA,EACAA,MAAOwD,EADP,EACOA,YAEzB,EAAKvE,MAAME,SACRY,iCAAiCC,EAAOwD,GACxCM,MAAK,SAAA3B,GAEJ,OAAO,EAAKlD,MAAME,SACf0B,KAAKsB,EAAStB,KAAKC,KACnBiD,IAAI,CACHR,WACAvD,aAGL8D,MAAK,SAAA3B,GACJ,EAAKG,SAAL,eAAmBgB,IACnB,EAAKrE,MAAM2D,QAAQC,KAAKC,MAEzBkB,OAAM,SAAAN,GACL,EAAKpB,SAAS,CAAEoB,aAGpBG,EAAMI,kBA5BW,EA+BnBC,SAAW,SAAAL,GACT,EAAKvB,SAAL,eAAiBuB,EAAMM,OAAOC,KAAOP,EAAMM,OAAO3B,SA7BlD,EAAKN,MAAL,eAAkBoB,GAHD,E,sEAmCT,IAAD,EAOHlC,KAAKc,MALPqB,EAFK,EAELA,SACAvD,EAHK,EAGLA,MACAwD,EAJK,EAILA,YACAC,EALK,EAKLA,YACAC,EANK,EAMLA,MAGIW,EACJb,IAAgBC,GACA,KAAhBD,GACU,KAAVxD,GACa,KAAbuD,EAEF,OACE,0BAAMK,SAAUxC,KAAKwC,UACnB,yBAAKV,UAAU,kBACb,kBAACoB,EAAA,EAAD,CACEF,KAAK,WACLG,UAAQ,EACRC,GAAG,yBACHC,MAAM,YACNC,QAAQ,WACRlC,MAAOe,EACPW,SAAU9C,KAAK8C,WAEjB,kBAACI,EAAA,EAAD,CACEF,KAAK,QACLG,UAAQ,EACRC,GAAG,0BACHC,MAAM,gBACNC,QAAQ,WACRlC,MAAOxC,EACPkE,SAAU9C,KAAK8C,WAEjB,kBAACI,EAAA,EAAD,CACEF,KAAK,cACLI,GAAG,0BACHC,MAAM,WACNE,KAAK,WACLD,QAAQ,WACRR,SAAU9C,KAAK8C,SACf1B,MAAOgB,IAET,kBAACc,EAAA,EAAD,CACEF,KAAK,cACLI,GAAG,2BACHC,MAAM,mBACNE,KAAK,WACLD,QAAQ,WACRR,SAAU9C,KAAK8C,SACf1B,MAAOiB,IAET,kBAACmB,EAAA,EAAD,CAAQF,QAAQ,YAAYG,MAAM,UAAUC,SAAUT,EAAWM,KAAK,UAAtE,WAICjB,GAAS,2BAAIA,EAAMqB,e,GA9FD/F,aAqGvBgG,EAAa,kBACjB,kBAACC,EAAA,EAAD,+BAEyB,kBAAC3D,EAAA,EAAD,CAAME,KAAMsB,GAAZ,UAOrBoC,EAAalC,YAAWjE,EAAa4E,IAE5BwB,EAhII,kBACjB,yBAAKjC,UAAU,kBACb,sCACA,kBAACgC,EAAD,Q,SCOE5B,G,MAAgB,CACpBtD,MAAO,GACPC,SAAU,GACVyD,MAAO,OAGH0B,E,YACJ,WAAYnG,GAAQ,IAAD,8BACjB,4CAAMA,KAKR2E,SAAW,SAAAC,GAAU,IAAD,EACU,EAAK3B,MAAzBlC,EADU,EACVA,MAAOC,EADG,EACHA,SAEf,EAAKhB,MAAME,SACRiB,6BAA6BJ,EAAOC,GACpC6D,MAAK,WACJ,EAAKxB,SAAL,eAAmBgB,IACnB,EAAKrE,MAAM2D,QAAQC,KAAKC,MAEzBkB,OAAM,SAAAN,GACL,EAAKpB,SAAS,CAAEoB,aAGpBG,EAAMI,kBAnBW,EAsBnBC,SAAW,SAAAL,GACT,EAAKvB,SAAL,eAAiBuB,EAAMM,OAAOC,KAAOP,EAAMM,OAAO3B,SApBlD,EAAKN,MAAL,eAAkBoB,GAHD,E,sEA0BT,IAAD,EAC4BlC,KAAKc,MAAhClC,EADD,EACCA,MAAOC,EADR,EACQA,SAAUyD,EADlB,EACkBA,MAEnBW,EAAyB,KAAbpE,GAA6B,KAAVD,EAErC,OACE,kBAACqF,EAAA,EAAD,CAAWC,SAAS,MAClB,0BAAM1B,SAAUxC,KAAKwC,UACnB,yBAAKV,UAAU,kBACb,kBAACoB,EAAA,EAAD,CACEF,KAAK,QACLG,UAAQ,EACRC,GAAG,oBACHC,MAAM,gBACNC,QAAQ,WACRlC,MAAOxC,EACPkE,SAAU9C,KAAK8C,WAEjB,kBAACI,EAAA,EAAD,CACEF,KAAK,WACLI,GAAG,0BACHC,MAAM,WACNE,KAAK,WACLY,aAAa,mBACbb,QAAQ,WACRR,SAAU9C,KAAK8C,WAGjB,kBAACU,EAAA,EAAD,CAAQF,QAAQ,YAAYG,MAAM,UAAUC,SAAUT,EAAWM,KAAK,UAAtE,WAICjB,GAAS,2BAAIA,EAAMqB,gB,GA3DH/F,aAmEvBwG,EAAazC,YACjBC,IACAjE,EAFiBgE,CAGjBqC,GAEaK,EAtFI,kBACjB,yBAAKvC,UAAU,kBACb,sCACA,kBAACsC,EAAD,MACA,kBAAC,EAAD,QCHElC,EAAgB,CAClBtD,MAAO,GACP0D,MAAO,MAGLgC,E,YACF,WAAYzG,GAAQ,IAAD,8BACf,4CAAMA,KAKV2E,SAAW,SAAAC,GAAU,IACT7D,EAAU,EAAKkC,MAAflC,MAER,EAAKf,MAAME,SACNqB,gBAAgBR,GAChB8D,MAAK,WACF,EAAKxB,SAAL,eAAmBgB,OAEtBU,OAAM,SAAAN,GACH,EAAKpB,SAAS,CAAEoB,aAGxBG,EAAMI,kBAlBS,EAqBnBC,SAAW,SAAAL,GACP,EAAKvB,SAAL,eAAiBuB,EAAMM,OAAOC,KAAOP,EAAMM,OAAO3B,SAnBlD,EAAKN,MAAL,eAAkBoB,GAHH,E,sEAyBT,IAAD,EACoBlC,KAAKc,MAAtBlC,EADH,EACGA,MAAO0D,EADV,EACUA,MAETW,EAAsB,KAAVrE,EAElB,OACI,0BAAM4D,SAAUxC,KAAKwC,UACjB,2BACIQ,KAAK,QACL5B,MAAOpB,KAAKc,MAAMlC,MAClBkE,SAAU9C,KAAK8C,SACfS,KAAK,OACLgB,YAAY,kBAEhB,4BAAQb,SAAUT,EAAWM,KAAK,UAAlC,qBAICjB,GAAS,2BAAIA,EAAMqB,c,GA5CC/F,aAwDtB4G,GApEY,kBACvB,6BACI,8CACA,kBAACC,GAAD,QAmEFA,GAAqB9G,EAAa2G,GChEzBjD,MAFG,SAAAN,GAAQ,QAAMA,IAEjBM,EATE,kBACf,6BACE,oCACA,uFCFEa,GAAgB,CAClBE,YAAa,GACbC,YAAa,GACbC,MAAO,MAGLoC,G,YACF,WAAY7G,GAAQ,IAAD,8BACf,4CAAMA,KAKV2E,SAAW,SAAAC,GAAU,IACTL,EAAgB,EAAKtB,MAArBsB,YAER,EAAKvE,MAAME,SACNuB,iBAAiB8C,GACjBM,MAAK,WACF,EAAKxB,SAAL,eAAmBgB,QAEtBU,OAAM,SAAAN,GACH,EAAKpB,SAAS,CAAEoB,aAGxBG,EAAMI,kBAlBS,EAqBnBC,SAAW,SAAAL,GACP,EAAKvB,SAAL,eAAiBuB,EAAMM,OAAOC,KAAOP,EAAMM,OAAO3B,SAnBlD,EAAKN,MAAL,eAAkBoB,IAHH,E,sEAyBT,IAAD,EACuClC,KAAKc,MAAzCsB,EADH,EACGA,YAAaC,EADhB,EACgBA,YAAaC,EAD7B,EAC6BA,MAE5BW,EACFb,IAAgBC,GAA+B,KAAhBD,EAEnC,OACI,0BAAMI,SAAUxC,KAAKwC,UACjB,2BACIQ,KAAK,cACL5B,MAAOgB,EACPU,SAAU9C,KAAK8C,SACfS,KAAK,WACLgB,YAAY,iBAEhB,2BACIvB,KAAK,cACL5B,MAAOiB,EACPS,SAAU9C,KAAK8C,SACfS,KAAK,WACLgB,YAAY,yBAEhB,4BAAQb,SAAUT,EAAWM,KAAK,UAAlC,qBAICjB,GAAS,2BAAIA,EAAMqB,c,GApDH/F,aA0DlBD,KAAa+G,ICpDbrD,MADG,SAAAN,GAAQ,QAAMA,IACjBM,EAZK,kBAChB,kBAAC,EAAgBvD,SAAjB,MACK,SAAAiD,GAAQ,OACL,6BACI,wCAAcA,EAASnC,OACvB,kBAAC6F,GAAD,MACA,kBAACE,GAAD,aCRVC,G,YACF,WAAY/G,GAAQ,IAAD,8BACf,4CAAMA,KACDiD,MAAQ,CACT+D,SAAS,EACThF,MAAO,IAJI,E,iFAOE,IAAD,OAChBG,KAAKkB,SAAS,CAAE2D,SAAS,IACzB7E,KAAKnC,MAAME,SAAS8B,QAAQiF,GAAG,SAAS,SAAAC,GACpC,IAAMC,EAAcD,EAASE,MACvBC,EAAYC,OAAOC,KAAKJ,GAAaK,KAAI,SAAAC,GAAG,sBAC3CN,EAAYM,GAD+B,CAE9C5F,IAAK4F,OAET,EAAKpE,SAAS,CACVrB,MAAOqF,EACPL,SAAS,S,6CAKjB7E,KAAKnC,MAAME,SAAS8B,QAAQ0F,Q,+BAEtB,IAAD,EACsBvF,KAAKc,MAAxBjB,EADH,EACGA,MAAOgF,EADV,EACUA,QACf,OACI,6BACI,qCACCA,GAAW,4CACZ,kBAAC,GAAD,CAAUhF,MAAOA,S,GA/BTjC,aAoClB4H,GAAW,SAAC,GAAD,IAAG3F,EAAH,EAAGA,MAAH,OACb,4BACKA,EAAMwF,KAAI,SAAA5F,GAAI,OACX,wBAAI6F,IAAK7F,EAAKC,KACV,8BACI,uCADJ,IAC0BD,EAAKC,KAE/B,8BACI,2CADJ,IAC8BD,EAAKb,OAEnC,8BACI,6CADJ,IACgCa,EAAK0C,gBAMtCxE,KAAaiH,I,qCCSbhE,UAzCf,WAEE,IAAM6E,EAAQhI,IAAMiI,SAClB,kBACEC,aAAe,CACbC,QAAS,CACPrC,KAAM,aAId,OACE,kBAACsC,GAAA,EAAD,CAAeJ,MAAOA,GACpB,kBAAC,IAAD,KACE,kBAACxB,EAAA,EAAD,CAAWC,SAAS,MAClB,kBAACL,EAAA,EAAD,CAAYiC,UAAU,MAAMC,MAAO,IACjC,kBAACC,GAAA,EAAD,MACA,kBAAC,EAAD,MAEA,6BAEA,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAMxE,EAAgBoE,UAAWK,IAC9C,kBAAC,IAAD,CAAOF,OAAK,EAACC,KAAMxE,EAAgBoE,UAAW/B,IAC9C,kBAAC,IAAD,CAAOkC,OAAK,EAACC,KAAMxE,EAAgBoE,UAAWzB,IAC9C,kBAAC,IAAD,CACE4B,OAAK,EACLC,Kb1CiB,iCa2CjBJ,UAAWtB,KAEb,kBAAC,IAAD,CAAOyB,OAAK,EAACC,KAAMxE,EAAaoE,UAAWM,KAC3C,kBAAC,IAAD,CAAOH,OAAK,EAACC,KAAMxE,EAAgBoE,UAAWO,KAC9C,kBAAC,IAAD,CAAOJ,OAAK,EAACC,KAAMxE,EAAcoE,UAAWlB,YC5CxD0B,IAASC,OACP,kBAAC,EAAgBpF,SAAjB,CAA0BC,MAAO,IAAI1C,GACnC,kBAAC,GAAD,OAEF8H,SAASC,eAAe,SnBsHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMlE,MAAK,SAAAmE,GACjCA,EAAaC,kB","file":"static/js/main.c83fc4c0.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\n\nconst FirebaseContext = React.createContext(null);\n\nexport const withFirebase = Component => props => (\n    <FirebaseContext.Consumer>\n        {firebase => <Component {...props} firebase={firebase} />}\n    </FirebaseContext.Consumer>\n);\n\nexport default FirebaseContext;","import app from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/database';\n\n\n\nconst config = {\n    apiKey: process.env.REACT_APP_API_KEY,\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n    databaseURL: process.env.REACT_APP_DATABASE_URL,\n    projectId: process.env.REACT_APP_PROJECT_ID,\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n    messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n    appId: process.env.REACT_APP_APP_ID,\n    measurementId: process.env.REACT_APP_MEASUREMENT_ID\n};\n\nclass Firebase {\n    constructor() {\n        app.initializeApp(config);\n\n        this.auth = app.auth();\n        this.db = app.database();\n    }\n\n    // *** Auth API ***\n\n    doCreateUserWithEmailAndPassword = (email, password) =>\n        this.auth.createUserWithEmailAndPassword(email, password);\n\n    doSignInWithEmailAndPassword = (email, password) =>\n        this.auth.signInWithEmailAndPassword(email, password);\n\n    doSignOut = () => this.auth.signOut();\n\n    doPasswordReset = email => this.auth.sendPasswordResetEmail(email);\n\n    doPasswordUpdate = password =>\n        this.auth.currentUser.updatePassword(password);\n\n    // *** User API ***\n    user = uid => this.db.ref(`users/${uid}`);\n    users = () => this.db.ref('users');\n}\n\nexport default Firebase;","import FirebaseContext, { withFirebase } from './context';\nimport Firebase from './firebase';\n\nexport default Firebase;\n\nexport { FirebaseContext, withFirebase };","import React from 'react';\nimport { withFirebase } from '../Firebase';\nimport Link from '@material-ui/core/Link';\nconst SignOutLink = ({ firebase }) => (\n\n  <Link onClick={firebase.doSignOut} href=\"#\">Signout</Link>\n);\nexport default withFirebase(SignOutLink);","export const LANDING = \"/padel-score-tracker/\";\nexport const SIGN_UP = \"/padel-score-tracker/signup\";\nexport const SIGN_IN = \"/padel-score-tracker/signin\";\nexport const HOME = \"/padel-score-tracker/home\";\nexport const ACCOUNT = \"/padel-score-tracker/account\";\nexport const ADMIN = \"/padel-score-tracker/admin\";\nexport const PASSWORD_FORGET = \"/padel-score-tracker/pw-forget\";\n","import React from 'react';\n\nconst AuthUserContext = React.createContext(null);\n\nexport default AuthUserContext;","import React from 'react';\n\nimport AuthUserContext from './context';\nimport { withFirebase } from '../Firebase';\n\nconst withAuthentication = Component => {\n    class WithAuthentication extends React.Component {\n        constructor(props) {\n            super(props);\n\n            this.state = {\n                authUser: null,\n            };\n        }\n\n        componentDidMount() {\n            this.listener = this.props.firebase.auth.onAuthStateChanged(\n                authUser => {\n                    authUser\n                        ? this.setState({ authUser })\n                        : this.setState({ authUser: null });\n                },\n            );\n        }\n\n        componentWillUnmount() {\n            this.listener();\n        }\n\n        render() {\n            return (\n                <AuthUserContext.Provider value={this.state.authUser}>\n                    <Component {...this.props} />\n                </AuthUserContext.Provider>\n            );\n        }\n    }\n\n    return withFirebase(WithAuthentication);\n};\n\nexport default withAuthentication;","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\nimport AuthUserContext from './context';\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\nconst withAuthorization = condition => Component => {\n    class WithAuthorization extends React.Component {\n        componentDidMount() {\n            this.listener = this.props.firebase.auth.onAuthStateChanged(\n                authUser => {\n                    if (!condition(authUser)) {\n                        this.props.history.push(ROUTES.SIGN_IN);\n                    }\n                },\n            );\n        }\n        componentWillUnmount() {\n            this.listener();\n        }\n        render() {\n            return (\n                <AuthUserContext.Consumer>\n                    {authUser =>\n                        condition(authUser) ? <Component {...this.props} /> : null\n                    }\n                </AuthUserContext.Consumer>\n            );\n        }\n    }\n    return compose(\n        withRouter,\n        withFirebase,\n    )(WithAuthorization);\n};\nexport default withAuthorization;","import React from 'react';\nimport Link from '@material-ui/core/Link';\n\nimport SignOutLink from '../SignOut/link';\nimport * as ROUTES from '../../constants/routes';\n\nimport { AuthUserContext } from '../Session';\n\n\nconst Navigation = () => (\n  <div >\n    <AuthUserContext.Consumer>\n      {authUser =>\n        authUser ? <NavigationAuth /> : <NavigationNonAuth />\n      }\n    </AuthUserContext.Consumer>\n  </div>\n);\n\nconst NavigationAuth = () => (\n  <ul className=\"navigation\">\n    <li>\n      <Link href={ROUTES.LANDING}>Landing</Link>\n    </li>\n    <li>\n      <Link href={ROUTES.HOME}>Home</Link>\n    </li>\n    <li>\n      <Link href={ROUTES.ACCOUNT}>Account</Link>\n    </li>\n    <li>\n      <Link href={ROUTES.ADMIN}>Admin</Link>\n    </li>\n    <li>\n      <SignOutLink />\n    </li>\n\n  </ul>\n);\n\nconst NavigationNonAuth = () => (\n  <ul className=\"navigation\">\n    <li>\n      <Link href={ROUTES.LANDING}>Landing</Link>\n    </li>\n    <li>\n      <Link href={ROUTES.SIGN_IN}>Sign In</Link>\n    </li>\n  </ul>\n);\n\nexport default Navigation;","import React from \"react\";\n\nconst Landing = () => (\n  <div>\n    <h1>Padel score tracker</h1>\n\n  </div>\n\n);\n\nexport default Landing;\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\n\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\nimport Link from '@material-ui/core/Link';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\nconst SignUpPage = () => (\n  <div className=\"flex-container\">\n    <h1>SignUp</h1>\n    <SignUpForm />\n  </div>\n);\n\nconst INITIAL_STATE = {\n  username: '',\n  email: '',\n  passwordOne: '',\n  passwordTwo: '',\n  error: null,\n};\n\nclass SignUpFormBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = event => {\n    const { username, email, passwordOne } = this.state;\n\n    this.props.firebase\n      .doCreateUserWithEmailAndPassword(email, passwordOne)\n      .then(authUser => {\n        // Create a user in your Firebase realtime database\n        return this.props.firebase\n          .user(authUser.user.uid)\n          .set({\n            username,\n            email,\n          });\n      })\n      .then(authUser => {\n        this.setState({ ...INITIAL_STATE });\n        this.props.history.push(ROUTES.HOME);\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n\n    event.preventDefault();\n  };\n\n  onChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  render() {\n    const {\n      username,\n      email,\n      passwordOne,\n      passwordTwo,\n      error,\n    } = this.state;\n\n    const isInvalid =\n      passwordOne !== passwordTwo ||\n      passwordOne === '' ||\n      email === '' ||\n      username === '';\n\n    return (\n      <form onSubmit={this.onSubmit}>\n        <div className=\"flex-container\">\n          <TextField\n            name=\"username\"\n            required\n            id=\"outlined-required-name\"\n            label=\"Full Name\"\n            variant=\"outlined\"\n            value={username}\n            onChange={this.onChange}\n          />\n          <TextField\n            name=\"email\"\n            required\n            id=\"outlined-required-email\"\n            label=\"Email Address\"\n            variant=\"outlined\"\n            value={email}\n            onChange={this.onChange}\n          />\n          <TextField\n            name=\"passwordOne\"\n            id=\"outlined-password-input\"\n            label=\"Password\"\n            type=\"password\"\n            variant=\"outlined\"\n            onChange={this.onChange}\n            value={passwordOne}\n          />\n          <TextField\n            name=\"passwordTwo\"\n            id=\"outlined-password-input2\"\n            label=\"Confirm Password\"\n            type=\"password\"\n            variant=\"outlined\"\n            onChange={this.onChange}\n            value={passwordTwo}\n          />\n          <Button variant=\"contained\" color=\"primary\" disabled={isInvalid} type=\"submit\">\n            Sign Up\n          </Button>\n\n          {error && <p>{error.message}</p>}\n        </div>\n      </form>\n    );\n  }\n}\n\nconst SignUpLink = () => (\n  <Typography>\n\n    Don't have an account? <Link href={ROUTES.SIGN_UP}>\n      Link\n  </Link>\n\n  </Typography>\n);\n\nconst SignUpForm = withRouter(withFirebase(SignUpFormBase));\n\nexport default SignUpPage;\n\nexport { SignUpForm, SignUpLink };","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\n\nimport { SignUpLink } from '../SignUp';\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Container from '@material-ui/core/Container';\nimport './signIn.css';\n\nconst SignInPage = () => (\n  <div className=\"flex-container\">\n    <h1>SignIn</h1>\n    <SignInForm />\n    <SignUpLink />\n  </div>\n);\n\nconst INITIAL_STATE = {\n  email: '',\n  password: '',\n  error: null,\n};\n\nclass SignInFormBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = event => {\n    const { email, password } = this.state;\n\n    this.props.firebase\n      .doSignInWithEmailAndPassword(email, password)\n      .then(() => {\n        this.setState({ ...INITIAL_STATE });\n        this.props.history.push(ROUTES.HOME);\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n\n    event.preventDefault();\n  };\n\n  onChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  render() {\n    const { email, password, error } = this.state;\n\n    const isInvalid = password === '' || email === '';\n\n    return (\n      <Container maxWidth=\"sm\">\n        <form onSubmit={this.onSubmit}>\n          <div className=\"flex-container\">\n            <TextField\n              name=\"email\"\n              required\n              id=\"outlined-required\"\n              label=\"Email address\"\n              variant=\"outlined\"\n              value={email}\n              onChange={this.onChange}\n            />\n            <TextField\n              name=\"password\"\n              id=\"outlined-password-input\"\n              label=\"Password\"\n              type=\"password\"\n              autoComplete=\"current-password\"\n              variant=\"outlined\"\n              onChange={this.onChange}\n            />\n\n            <Button variant=\"contained\" color=\"primary\" disabled={isInvalid} type=\"submit\">\n              Sign In\n          </Button>\n\n            {error && <p>{error.message}</p>}\n          </div>\n        </form>\n      </Container>\n    );\n  }\n}\n\nconst SignInForm = compose(\n  withRouter,\n  withFirebase,\n)(SignInFormBase);\n\nexport default SignInPage;\n\nexport { SignInForm };","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\n\nconst PasswordForgetPage = () => (\n    <div>\n        <h1>PasswordForget</h1>\n        <PasswordForgetForm />\n    </div>\n);\n\nconst INITIAL_STATE = {\n    email: '',\n    error: null,\n};\n\nclass PasswordForgetFormBase extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = { ...INITIAL_STATE };\n    }\n\n    onSubmit = event => {\n        const { email } = this.state;\n\n        this.props.firebase\n            .doPasswordReset(email)\n            .then(() => {\n                this.setState({ ...INITIAL_STATE });\n            })\n            .catch(error => {\n                this.setState({ error });\n            });\n\n        event.preventDefault();\n    };\n\n    onChange = event => {\n        this.setState({ [event.target.name]: event.target.value });\n    };\n\n    render() {\n        const { email, error } = this.state;\n\n        const isInvalid = email === '';\n\n        return (\n            <form onSubmit={this.onSubmit}>\n                <input\n                    name=\"email\"\n                    value={this.state.email}\n                    onChange={this.onChange}\n                    type=\"text\"\n                    placeholder=\"Email Address\"\n                />\n                <button disabled={isInvalid} type=\"submit\">\n                    Reset My Password\n        </button>\n\n                {error && <p>{error.message}</p>}\n            </form>\n        );\n    }\n}\n\nconst PasswordForgetLink = () => (\n    <p>\n        <Link to={ROUTES.PASSWORD_FORGET}>Forgot Password?</Link>\n    </p>\n);\n\nexport default PasswordForgetPage;\n\nconst PasswordForgetForm = withFirebase(PasswordForgetFormBase);\n\nexport { PasswordForgetForm, PasswordForgetLink };","import React from \"react\";\nimport { withAuthorization } from '../Session';\n\nconst HomePage = () => (\n  <div>\n    <h1>Home</h1>\n    <p>The Home Page is accessible by every signed in user.</p>\n  </div>\n);\n\nconst condition = authUser => !!authUser;\n\nexport default withAuthorization(condition)(HomePage);\n","import React, { Component } from 'react';\n\nimport { withFirebase } from '../Firebase';\n\nconst INITIAL_STATE = {\n    passwordOne: '',\n    passwordTwo: '',\n    error: null,\n};\n\nclass PasswordChangeForm extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = { ...INITIAL_STATE };\n    }\n\n    onSubmit = event => {\n        const { passwordOne } = this.state;\n\n        this.props.firebase\n            .doPasswordUpdate(passwordOne)\n            .then(() => {\n                this.setState({ ...INITIAL_STATE });\n            })\n            .catch(error => {\n                this.setState({ error });\n            });\n\n        event.preventDefault();\n    };\n\n    onChange = event => {\n        this.setState({ [event.target.name]: event.target.value });\n    };\n\n    render() {\n        const { passwordOne, passwordTwo, error } = this.state;\n\n        const isInvalid =\n            passwordOne !== passwordTwo || passwordOne === '';\n\n        return (\n            <form onSubmit={this.onSubmit}>\n                <input\n                    name=\"passwordOne\"\n                    value={passwordOne}\n                    onChange={this.onChange}\n                    type=\"password\"\n                    placeholder=\"New Password\"\n                />\n                <input\n                    name=\"passwordTwo\"\n                    value={passwordTwo}\n                    onChange={this.onChange}\n                    type=\"password\"\n                    placeholder=\"Confirm New Password\"\n                />\n                <button disabled={isInvalid} type=\"submit\">\n                    Reset My Password\n        </button>\n\n                {error && <p>{error.message}</p>}\n            </form>\n        );\n    }\n}\n\nexport default withFirebase(PasswordChangeForm);","import React from 'react';\nimport { AuthUserContext, withAuthorization } from '../Session';\nimport { PasswordForgetForm } from '../PasswordForget';\nimport PasswordChangeForm from '../PasswordChange';\nconst AccountPage = () => (\n    <AuthUserContext.Consumer>\n        {authUser => (\n            <div>\n                <h1>Account: {authUser.email}</h1>\n                <PasswordForgetForm />\n                <PasswordChangeForm />\n            </div>\n        )}\n    </AuthUserContext.Consumer>\n);\nconst condition = authUser => !!authUser;\nexport default withAuthorization(condition)(AccountPage);","import React, { Component } from 'react';\nimport { withFirebase } from '../Firebase';\nclass AdminPage extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            loading: false,\n            users: [],\n        };\n    }\n    componentDidMount() {\n        this.setState({ loading: true });\n        this.props.firebase.users().on('value', snapshot => {\n            const usersObject = snapshot.val();\n            const usersList = Object.keys(usersObject).map(key => ({\n                ...usersObject[key],\n                uid: key,\n            }));\n            this.setState({\n                users: usersList,\n                loading: false,\n            });\n        });\n    }\n    componentWillUnmount() {\n        this.props.firebase.users().off();\n    }\n    render() {\n        const { users, loading } = this.state;\n        return (\n            <div>\n                <h1>Admin</h1>\n                {loading && <div>Loading ...</div>}\n                <UserList users={users} />\n            </div>\n        );\n    }\n}\nconst UserList = ({ users }) => (\n    <ul>\n        {users.map(user => (\n            <li key={user.uid}>\n                <span>\n                    <strong>ID:</strong> {user.uid}\n                </span>\n                <span>\n                    <strong>E-Mail:</strong> {user.email}\n                </span>\n                <span>\n                    <strong>Username:</strong> {user.username}\n                </span>\n            </li>\n        ))}\n    </ul>\n);\nexport default withFirebase(AdminPage);","import React from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\n\nimport Navigation from '../Navigation';\nimport LandingPage from '../Landing';\nimport SignUpPage from '../SignUp';\nimport SignInPage from '../SignIn';\nimport PasswordForgetPage from '../PasswordForget';\nimport HomePage from '../Home';\nimport AccountPage from '../Account';\nimport AdminPage from '../Admin';\nimport 'typeface-roboto';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\n\nimport * as ROUTES from '../../constants/routes';\nimport { withAuthentication } from '../Session';\nimport CssBaseline from '@material-ui/core/CssBaseline';\n// import useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport { createMuiTheme } from '@material-ui/core/styles';\n\n\nfunction App() {\n  // eslint-disable-next-line\n  const theme = React.useMemo(\n    () =>\n      createMuiTheme({\n        palette: {\n          type: 'dark',\n        },\n      }),\n  );\n  return (\n    <ThemeProvider theme={theme}>\n      <Router>\n        <Container maxWidth=\"sm\">\n          <Typography component=\"div\" style={{}} >\n            <CssBaseline />\n            <Navigation />\n\n            <hr />\n\n            <Route exact path={ROUTES.LANDING} component={LandingPage} />\n            <Route exact path={ROUTES.SIGN_UP} component={SignUpPage} />\n            <Route exact path={ROUTES.SIGN_IN} component={SignInPage} />\n            <Route\n              exact\n              path={ROUTES.PASSWORD_FORGET}\n              component={PasswordForgetPage}\n            />\n            <Route exact path={ROUTES.HOME} component={HomePage} />\n            <Route exact path={ROUTES.ACCOUNT} component={AccountPage} />\n            <Route exact path={ROUTES.ADMIN} component={AdminPage} />\n\n          </Typography>\n        </Container>\n\n\n      </Router>\n    </ThemeProvider>\n  );\n}\n\nexport default withAuthentication(App);","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n\nimport App from './components/App';\nimport Firebase, { FirebaseContext } from './components/Firebase';\n\nReactDOM.render(\n  <FirebaseContext.Provider value={new Firebase()}>\n    <App />\n  </FirebaseContext.Provider>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}